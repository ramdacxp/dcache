### ============================================================================
### This file contains sample HTTP requests to demonstrate the dcache REST API.
### ============================================================================
###
### By default the dcache development server with testdata is used.
### Requires VSCode with the "REST Client" extension installed.
###

@server = http://127.0.0.1:8080


### ============================================================================
### GENERAL REQUESTS
### ============================================================================

### GET API root address
### -> 500 (internal server error) not configured error
### -> 400 (bad request) no token given error
GET {{server}}/api.php HTTP/1.1


### ============================================================================
### GET DATA
### ============================================================================

### GET with empty token
### -> 400 (bad request) No token given.
GET {{server}}/api.php?token= HTTP/1.1

### GET with short token
### -> 400 (bad request) Token is too short. Must be at least 8 characters long.
GET {{server}}/api.php?token=123 HTTP/1.1

### GET with invalid chars token
### -> 400 (bad request) Token contains invalid characters. Only letters, numbers, dots and dashes are allowed.
GET {{server}}/api.php?token=Ãœberhauptnichterlaubt HTTP/1.1

### GET with wrong/unknown token
### -> 404 (not found) Dataset not found.
GET {{server}}/api.php?token=wrongToken HTTP/1.1

### GET with correct token
### -> 200 (ok) JSON object response
GET {{server}}/api.php?token=testdata HTTP/1.1

### GET with correct token and non-existing property
### -> 404 (not found) Property not found in dataset.
GET {{server}}/api.php?token=testdata&property=doesnotexist HTTP/1.1

### GET with correct token and property
### -> 200 (ok) string response
GET {{server}}/api.php?token=testdata&property=firstname HTTP/1.1

### GET with correct token, property, and value
### -> 200 (ok) updated JSON object response
GET {{server}}/api.php?token=testdata&property=firstname&value=Egon HTTP/1.1

### ============================================================================
### SET/UPDATE DATA
### ============================================================================

### POST without token
### -> 400 (bad request) no token given.
POST {{server}}/api.php HTTP/1.1

### POST with token but invalid content type
### -> 400 (bad request) Invalid content type. Expected application/json.
POST {{server}}/api.php?token=testdata HTTP/1.1
Content-Type: ascii

### POST with token and correct content type but wrong JSON
### -> 400 (bad request) Content is not valid JSON.
POST {{server}}/api.php?token=testdata HTTP/1.1
Content-Type: application/json

{
  "newProperty": "some new value",
  "firstname": "Hans", // <- json error here
}

### POST with token and correct data
### -> 200 (ok) JSON object response with merged/updated data
POST {{server}}/api.php?token=testdata HTTP/1.1
Content-Type: application/json

{
  "newProperty": "some new value",
  "firstname": "Hans"
}

### POST new dataset
### -> 200 (ok) JSON object response with new data
POST {{server}}/api.php?token=newtestdata HTTP/1.1
Content-Type: application/json

{
  "hello": "World",
  "this": "is a new record"
}

### ============================================================================
### DELETE DATA
### ============================================================================

### DELETE without token
### -> 400 (bad request) No token given.
DELETE {{server}}/api.php HTTP/1.1

### DELETE with not existing token
### -> 200 (ok) true
DELETE {{server}}/api.php?token=notthere HTTP/1.1

### DELETE with token and property
### -> 200 (ok) true
DELETE {{server}}/api.php?token=newtestdata&property=this HTTP/1.1

### DELETE with token and property
### -> 200 (ok) true
DELETE {{server}}/api.php?token=newtestdata HTTP/1.1

### ============================================================================
### Not Supported
### ============================================================================

### PUT request
### -> 400 (bad request) Not implemented.
PUT {{server}}/api.php HTTP/1.1

### ============================================================================
### END USER WEBSITE
### ============================================================================
GET {{server}}/ HTTP/1.1
